@model CarpoolingEL.USUARIOS

@{
    ViewBag.Title = "Editar";
}

@if (Session["UserTipo"] != null && Session["UserTipo"].ToString() == "2")
{

<style>
    .sumir {
        display: none;
    }
</style>

<h3>Editar dados</h3>

    using (Html.BeginForm())
    {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idUsu)

        <div class="form-group">
            <label class="control-label col-sm-2">Nome:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.nomeUsu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nomeUsu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">E-mail:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.emailUsu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emailUsu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">RG:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.rgUsu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rgUsu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">Endereço:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.endUsu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.endUsu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">Complemento:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.compUsu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.compUsu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">CEP:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.cepUsu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cepUsu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">Bairro:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.bairroUsu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bairroUsu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">Cidade:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.cidadeUsu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cidadeUsu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">UF:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ufUsu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ufUsu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">Telefone:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.telUsu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telUsu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">Celular:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.celUsu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.celUsu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">Usuário:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.usuario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.usuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">Senha:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.senha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.senha, "", new { @class = "text-danger" })
            </div>
        </div>


       @Html.EditorFor(model => model.fkTipo, new { htmlAttributes = new { @class = "form-control sumir" } })


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-success" />
                <a style="margin-left: 10px;" class="btn btn-primary" href="Configuracoes">Voltar</a>
            </div>
        </div>
    </div>
    }
}
else if (Session["UserTipo"] != null && Session["UserTipo"].ToString() == "1")
{
    Response.Redirect("~/Passageiro");
}
else
{
    Response.Redirect("~/Home");
}
