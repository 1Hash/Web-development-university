@model CarpoolingEL.DESTINOS

@{
    ViewBag.Title = "Registro de destinos";
}

@if (Session["UserTipo"] != null && Session["UserTipo"].ToString() == "2")
{

<style>
    .sumir {
        display: none;
    }
</style>

<h2>Registro de destinos</h2>

using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-sm-2">Endereço:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.endDest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.endDest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">Complemento:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.compDest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.compDest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">CEP:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.cepDest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cepDest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">Bairro:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.bairroDest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bairroDest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">Cidade:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.cidadeDest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cidadeDest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-2">UF:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ufDest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ufDest, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.EditorFor(model => model.fkUsu, new { htmlAttributes = new { @class = "form-control sumir", @Value = Session["UserID"].ToString() } })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Registrar" class="btn btn-success" />
                <a style="margin-left: 10px;" class="btn btn-primary" href="Index">Voltar</a>
            </div>
        </div>
    </div>
}

}
else if (Session["UserTipo"] != null && Session["UserTipo"].ToString() == "1")
{
    Response.Redirect("~/Passageiro");
}
else
{
    Response.Redirect("~/Home");
}